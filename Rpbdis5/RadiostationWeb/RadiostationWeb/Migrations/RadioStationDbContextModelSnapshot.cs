// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadiostationWeb.Data;

#nullable disable

namespace RadiostationWeb.Migrations
{
    [DbContext(typeof(RadioStationDbContext))]
    partial class RadioStationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RadiostationWeb.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Members")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("RadiostationWeb.Models.BroadcastSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("BroadcastDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RecordId");

                    b.ToTable("BroadcastSchedule");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Record", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("RadiostationWeb.Models.RecordDetail", b =>
                {
                    b.Property<int>("RecordDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordDetailId"));

                    b.Property<TimeOnly>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("RecordingDate")
                        .HasColumnType("date");

                    b.HasKey("RecordDetailId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.ToTable("RecordDetails");
                });

            modelBuilder.Entity("RadiostationWeb.Models.BroadcastSchedule", b =>
                {
                    b.HasOne("RadiostationWeb.Models.Employee", "Employee")
                        .WithMany("BroadcastSchedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadiostationWeb.Models.Record", "Record")
                        .WithMany("BroadcastSchedules")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Record", b =>
                {
                    b.HasOne("RadiostationWeb.Models.Artist", "Artist")
                        .WithMany("Records")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadiostationWeb.Models.Genre", "Genre")
                        .WithMany("Records")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("RadiostationWeb.Models.RecordDetail", b =>
                {
                    b.HasOne("RadiostationWeb.Models.Record", "Record")
                        .WithOne("RecordDetail")
                        .HasForeignKey("RadiostationWeb.Models.RecordDetail", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Record");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Artist", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Employee", b =>
                {
                    b.Navigation("BroadcastSchedules");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Genre", b =>
                {
                    b.Navigation("Records");
                });

            modelBuilder.Entity("RadiostationWeb.Models.Record", b =>
                {
                    b.Navigation("BroadcastSchedules");

                    b.Navigation("RecordDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
